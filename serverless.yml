service: todo-list
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    DYNAMODB_TABLE: ${self:service}-taskTable-${sls:stage}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:Query'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource:
            - 'arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-taskTable-${sls:stage}'

functions:
  api:
    handler: index.handler
    events:
      - httpApi:
          path: /
          method: get
  create:
    handler: create.handler
    events:
      - httpApi:
          path: /tasks
          method: post
  list:
    handler: list.handler
    events:
      - httpApi:
          path: /tasks
          method: get
  fetch:
    handler: fetch.handler
    events:
      - httpApi:
          path: /tasks/{id}
          method: get
  modify:
    handler: modify.handler
    events:
      - httpApi:
          path: /tasks/{id}
          method: put

resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: ${self:service}-taskTable-${sls:stage}

plugins:
  - serverless-plugin-typescript
  - serverless-better-credentials
  - serverless-offline
